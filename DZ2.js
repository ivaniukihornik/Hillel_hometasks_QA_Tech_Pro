/*ДЗ 2. Параноя

Опис ДЗ: В нас є масив обєктів в яких міститься email.

У нас параноя, ми не довіряємо жодним адресам, окрім зареєстрованих на доменах gmail.com та yahoo.com.
За допомогою регулярного виразу створіть масив з адресами, гідними довіри. Постарайтеся також зробити просту валідацію до @
    *одне, або два слова які можуть містити (латинські букви, цифри) яке може бути розділене крапкою.
*/

var arr = [
    {
        userName:"Test",
        lastName:"Test",
        email:"test.test@gmail.com"
    },
    {
        userName:"Dmitro",
        lastName:"Porohov",
        email:"dmitro.porohov@yahoo.com"
    },
    {
        userName:"Andrii",
        lastName:"",
        email:"andrii@mail.ru" // Нам такі не підходять
    },
];


var pattern = /([\w-]|[\w-][\w\.-]{0,308}[\w-])(@gmail\.com|@yahoo\.com)/mg
/*
1. [\w-] - якщо юзернейм емейла буде містити 1 символ, він має бути латинською буквою, цифрою, або "-", або "_"
2. [\w-][\w\.-]{0,308}[\w-] - якщо юзернейм емейла буде містити більше одного символа, він може починатись і закінчуватись на латинську 
букву, цифру, або "-", або "_". Всередині ще може містити крапки, але не починатись і не закінчуватись ними.
Загальна довжина всього емейлу за стандартами RFC 5321 та RFC 5322 не має перевищувати 320 символів. Доменна частина і "@" - 10 
символів, тому загальна довжина юзернейму - не більше 310
*/

var matches = [];
for(entry of arr){
    var email = entry.email;
    if(email.match(pattern) != null)
        matches.push(email.match(pattern)[0]);
}
console.log(matches);